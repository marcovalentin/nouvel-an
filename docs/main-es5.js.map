{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/players.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","playersService","players","survivors","start","end","playersSubscription","playersSubject","subscribe","filter","player","assignedPlayer","undefined","emitPlayers","currentPlayer","length","max","Math","floor","random","isAssigned","name","getRandomInt","setPlayers","initPlayers","unsubscribe","selector","templateUrl","styleUrls","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AppModule","initializeApp","declarations","providers","bootstrap","PlayersService","db","getPlayers","next","database","ref","set","savePlayers","on","data","val","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","//import { PlayersService } from './players.service';\nimport { Player } from './models/player';\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n//import { PlayersLocalService } from './playerslocal.service';\nimport { PlayersService } from './players.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnDestroy {\n\n  players: Player[] = [];\n  survivors: Player[] = [];\n  playersSubscription: Subscription;\n\n  start = false;\n  end = false;\n\n  currentPlayer: Player;\n\n  constructor(private playersService: PlayersService) {\n\n    this.playersSubscription = this.playersService.playersSubject.subscribe(\n      (players: Player[]) => {\n        this.players = players;\n        this.survivors = this.players.filter((player) => player.assignedPlayer === undefined);\n      }\n    );\n    this.playersService.emitPlayers();\n\n    this.currentPlayer = null;\n  }\n\n  beginDurty() {\n    this.start = true;\n    if (this.survivors.length === 0) {\n      this.end = true;\n    }\n  }\n\n  getRandomInt(max: number) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  assignPlayer() {\n    const survivors = this.players.filter((player: Player) => {\n      return player.isAssigned === false && player.name !== this.currentPlayer.name;\n    });\n\n    this.currentPlayer.assignedPlayer = survivors[this.getRandomInt(survivors.length)];\n    this.currentPlayer.assignedPlayer.isAssigned = true;\n\n    this.playersService.setPlayers(this.players);\n  }\n\n  resetTirage() {\n    this.playersService.initPlayers();\n  }\n\n  ngOnDestroy() {\n    this.playersSubscription.unsubscribe();\n  }\n\n}\n","<div class=\"container\" class=\"full-background\">\n  <div class=\"row align-items-center h-100\">\n    <div class=\"card col-6 text-center pt-1 mx-auto bg-warning\">\n      <img class=\"card-img-top mx-auto avatar\" style=\"width: 200px; height: 200px;\" [src]=\"currentPlayer?.assignedPlayer?.img\" *ngIf=\"end===false && currentPlayer?.assignedPlayer\">\n      <div class=\"card-body text-primary\">\n        <div *ngIf=\"end===false && start===false\">\n          <h3>Bienvenue sur le tirage au sort du nouvel an !!</h3>\n          <button class=\"btn btn-success\" (click)=\"beginDurty()\">Commencer a jouer</button>\n        </div>\n\n        <div *ngIf=\"start===true && end===false && !currentPlayer?.assignedPlayer\">\n          <div class=\"pb-3\">\n              <label for=\"player\">Qui est-tu ?</label>\n              <select [(ngModel)]=\"currentPlayer\" class=\"form-control\" id=\"player\">\n                <option selected [ngValue]=\"null\"></option>\n                <option *ngFor=\"let survivor of survivors\" [ngValue]=\"survivor\">\n                  {{survivor.name}}\n                </option>\n              </select>\n          </div>\n          <button *ngIf=\"currentPlayer !== null\" class=\"btn btn-success\" (click)=\"assignPlayer()\">Découvre ton lutin</button>\n        </div>\n\n        <div *ngIf=\"end===false && currentPlayer?.assignedPlayer\">\n          <h2>Ton lutin est <strong>{{currentPlayer?.assignedPlayer?.name}}</strong></h2>\n          <h3>{{currentPlayer.assignedPlayer.speech}}</h3>\n        </div>\n\n        <div *ngIf=\"end===true\">\n          <h3>Merci à tous on se retrouve le 31 pour offrir les cadeaux !!</h3>\n        </div>\n        <div hidden>\n          <table >\n            <thead>\n              <tr>\n                <th scope=\"col\">Nom</th>\n                <th scope=\"col\">Offre à</th>     \n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let player of players \">\n                <th scope=\"row\">{{ player.name}}</th>\n                <td>{{ player.assignedPlayer?.name}}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {FormsModule} from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PlayersService } from './players.service';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireModule } from '@angular/fire';\n\nconst config = {\n  apiKey: 'AIzaSyCpwjLIhnZ9gTGaSQVUQOJ3JMnWxbHQw4I',\n  authDomain: 'cadeaunoel-e140d.firebaseapp.com',\n  databaseURL: 'https://cadeaunoel-e140d.firebaseio.com',\n  projectId: 'cadeaunoel-e140d',\n  storageBucket: 'cadeaunoel-e140d.appspot.com',\n  messagingSenderId: '455608366904',\n  appId: '1:455608366904:web:82a1215e151e13dc27f3cd'\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(config),\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFireDatabaseModule\n  ],\n  providers: [PlayersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Player } from './models/player';\nimport { Subject } from 'rxjs';\n\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { DataSnapshot } from '@angular/fire/database/interfaces';\n\nimport * as playersData from '../assets/data/nouvel-an-data-2024.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayersService {\n\n  constructor(private db: AngularFireDatabase) {\n    this.getPlayers();\n  }\n\n  players: Player[] = [];\n  playersSubject = new Subject<Player[]>();\n\n  emitPlayers() {\n    this.playersSubject.next(this.players);\n  }\n\n  savePlayers() {\n    this.db.database.ref('/players').set(this.players);\n  }\n\n  setPlayers(players: Player[]) {\n    this.players = players;\n    this.savePlayers();\n  }\n\n  getPlayers() {\n    this.db.database.ref('/players')\n      .on('value', (data: DataSnapshot) => {\n          this.players = data.val() ? data.val() : [];\n          this.emitPlayers();\n        }\n      );\n  }\n\n  initPlayers() {\n    this.players = playersData.players ? playersData.players : [];\n    this.savePlayers();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}